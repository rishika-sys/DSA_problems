//Function to find intersection point in Y shaped Linked Lists.
int intersectPoint(Node* head1, Node* head2)
{
    // Your Code Here
    Node *temp1=head1;
    Node *temp2=head2;
    while(temp1!=NULL)
    {
        Node *temp2=head2;
        while(temp2!=NULL)
        {
             if(temp1==temp2)
            {
                return temp1->data;
                
            }
            temp2=temp2->next;
        }
        temp1=temp1->next;
    }

}

Time-complexity=O(n*m).

****************Better solution is using hashing with time-complexity=O(n+m) and space-comp=O(n)******************

int intersectPoint(Node* head1, Node* head2)
{
    unordered_set<Node*> s;
    while(head1!=NULL )
    {
        s.insert(head1);
        head1=head1->next;
    }
    while(head2!=NULL)
    {
        if(s.find(head2)!=s.end())
        {
            return head2->data;
        }
        head2=head2->next;
            
    }
 }
    
    
