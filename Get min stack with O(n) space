class Solution{
    int minEle;
    stack<int> s;
    stack<int> ss;
    //Declare 2 stacks one will have push and pop operation ongoing and the other will give us the getMin value.
    public:
       /*returns min element from stack*/
       int getMin(){
           
           //Write your code here
           if(s.empty())
           {
               return -1;
           }
          return ss.top();
           
       }
       
       /*returns poped element from stack*/
       int pop(){
           
           //Write your code here
           if(s.empty())
           return -1;
           int x=s.top();
           s.pop();
           
           //popping both the element from stack so that new getMin can be found.
           if(x==ss.top())
           {
               ss.pop();
           }
           return x;
           
       }
       
       /*push element x into the stack*/
       void push(int x){
           
           //Write your code here
           s.push(x);
          
           if(ss.empty() || ss.top()>=x)
           {
               ss.push(x);
           }
       }
